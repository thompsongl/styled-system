(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{134:function(e,n,a){"use strict";a.r(n);var t=a(8),o=a.n(t),m=a(0),r=a.n(m),p=a(1);n.default=function(e){var n=e.components;o()(e,["components"]);return r.a.createElement(p.MDXTag,{name:"wrapper",components:n},r.a.createElement(p.MDXTag,{name:"h1",components:n,props:{id:"api"}},"API"),r.a.createElement(p.MDXTag,{name:"ul",components:n},r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"p",components:n,parentName:"li"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#core"}},"Core")),r.a.createElement(p.MDXTag,{name:"ul",components:n,parentName:"li"},r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#space"}},"space")," (margins & paddings)"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#width"}},"width")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#fontsize"}},"fontSize")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#color"}},"color")," (and background-color)"))),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#typography"}},"Typography")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#layout"}},"Layout")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#flexbox"}},"Flexbox")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#borders"}},"Borders")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#position"}},"Position")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#misc"}},"Misc")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#variants"}},"Variant styles")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"p",components:n,parentName:"li"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#utilities"}},"Utilities")),r.a.createElement(p.MDXTag,{name:"ul",components:n,parentName:"li"},r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#themeget"}},"themeGet")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#proptypes"}},"propTypes")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#mixed"}},"mixed")))),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"p",components:n,parentName:"li"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#customize"}},"Customize")),r.a.createElement(p.MDXTag,{name:"ul",components:n,parentName:"li"},r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#style"}},"style")),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#variant"}},"variant")))),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#defaults"}},"Defaults"))),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"core"}},"Core"),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"space"}},"space"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { space } from 'styled-system'\n")),r.a.createElement(p.MDXTag,{name:"p",components:n},"The space utility converts shorthand margin and padding props to margin and padding CSS declarations."),r.a.createElement(p.MDXTag,{name:"ul",components:n},r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"Numbers from 0-4 (or the length of ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"theme.space"),") are converted to values on the ",r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#spacing-scale"}},"spacing scale"),"."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"Negative values can be used for negative margins."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"Numbers greater than the length of the ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"theme.space")," array are converted to raw pixel values."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"String values are passed as raw CSS values."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"And array values are converted into ",r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"responsive-styles.md"}},"responsive values"),".")),r.a.createElement(p.MDXTag,{name:"p",components:n},"Margin and padding props follow a shorthand syntax for specifying direction."),r.a.createElement(p.MDXTag,{name:"ul",components:n},r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"m"),":  margin"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"mt"),": margin-top"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"mr"),": margin-right"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"mb"),": margin-bottom"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"ml"),": margin-left"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"mx"),": margin-left and margin-right"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"my"),": margin-top and margin-bottom"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"p"),":  padding"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"pt"),": padding-top"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"pr"),": padding-right"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"pb"),": padding-bottom"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"pl"),": padding-left"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"px"),": padding-left and padding-right"),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"py"),": padding-top and padding-bottom")),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// examples (margin prop)\n\n// sets margin value of `theme.space[2]`\n<Box m={2} />\n\n// sets margin value of `-1 * theme.space[2]`\n<Box m={-2} />\n\n// sets a margin value of `16px` since it's greater than `theme.space.length`\n<Box m={16} />\n\n// sets margin `'auto'`\n<Box m='auto' />\n\n// sets margin `8px` on all viewports and `16px` from the smallest breakpoint and up\n<Box m={[ 1, 2 ]} />\n")),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"width"}},"width"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { width } from 'styled-system'\n")),r.a.createElement(p.MDXTag,{name:"p",components:n},"The width utility parses a component's ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"width")," prop and converts it into a CSS width declaration."),r.a.createElement(p.MDXTag,{name:"ul",components:n},r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"Numbers from 0-1 are converted to percentage widths."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"Numbers greater than 1 are converted to pixel values."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"String values are passed as raw CSS values."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"And arrays are converted to ",r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"responsive-styles.md"}},"responsive width styles"),".")),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// examples\n\n// width `50%`\n<Box width={1/2} />\n\n// width `256px`\n<Box width={256} />\n\n// width `'2em'`\n<Box width='2em' />\n\n// width `100%` on all viewports and `50%` from the smallest breakpoint and up\n<Box width={[ 1, 1/2 ]} />\n")),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"fontsize"}},"fontSize"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { fontSize } from 'styled-system'\n")),r.a.createElement(p.MDXTag,{name:"p",components:n},"The fontSize utility parses a component's ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"fontSize")," prop and converts it into a CSS font-size declaration."),r.a.createElement(p.MDXTag,{name:"ul",components:n},r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"Numbers from 0-8 (or ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"theme.fontSizes.length"),") are converted to values on the ",r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#default-theme"}},"font size scale"),"."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"Numbers greater than ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"theme.fontSizes.length")," are converted to raw pixel values."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"String values are passed as raw CSS values."),r.a.createElement(p.MDXTag,{name:"li",components:n,parentName:"ul"},"And array values are converted into ",r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"responsive-styles.md"}},"responsive values"),".")),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// examples\n\n// font-size of `theme.fontSizes[3]`\n<Text fontSize={3} />\n\n// font-size `32px`\n<Text fontSize={32} />\n\n// font-size `'2em'`\n<Text fontSize='2em' />\n\n// font-size `10px` on all viewports and `12px` from the smallest breakpoint and up\n<Text fontSize={[ 10, 12 ]} />\n")),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"color"}},"color"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { color } from 'styled-system'\n")),r.a.createElement(p.MDXTag,{name:"p",components:n},"The color utility parses a component's ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"color")," and ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"bg")," props and converts them into CSS declarations.\nBy default the raw value of the prop is returned.\nColor palettes can be configured with the ",r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"configuration.md"}},"ThemeProvider")," to use keys as prop values, with support for dot notation.\nArray values are converted into ",r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"responsive-styles.md"}},"responsive values"),"."),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// examples\n\n// picks the value defined in `theme.colors['blue']`\n<Box color='blue' />\n\n// picks up a nested color value using dot notation\n// `theme.colors['gray'][0]`\n<Box color='gray.0' />\n\n// raw CSS color value\n<Box color='#f00' />\n")),r.a.createElement(p.MDXTag,{name:"hr",components:n}),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"typography"}},"Typography"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// fontFamily\n<Text fontFamily='mono' />\n\n// textAlign\n<Text textAlign='center' />\n<Text textAlign={[ 'center', 'left' ]} />\n\n// lineHeight\n<Text lineHeight='1.25' />\n\n// fontWeight\n<Text fontWeight='bold' />\n\n// letterSpacing\n<Text letterSpacing='0.1em' />\n")),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"layout"}},"Layout"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// display\n<Box display='inline-block' />\n<Box display={[ 'block', 'inline-block' ]} />\n\n// maxWidth\n<Box maxWidth={1024} />\n<Box maxWidth={[ 768, null, null, 1024 ]} />\n\n// minWidth\n<Box minWidth={128} />\n<Box minWidth={[ 96, 128 ]} />\n\n// height\n<Box height={64} />\n<Box height={[ 48, 64 ]} />\n\n// maxHeight\n<Box maxHeight={512} />\n<Box maxHeight={[ 384, 512 ]} />\n\n// minHeight\n<Box minHeight={512} />\n<Box minHeight={[ 384, 512 ]} />\n\n// size (width & height)\n<Box size={32} />\n<Box size={[ 32, 48 ]} />\n\n// ratio (height: 0 & paddingBottom)\n<Box ratio={3/4} />\n")),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"flexbox"}},"Flexbox"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// alignItems\n<Flex alignItems='center' />\n\n// alignContent\n<Flex alignContent='center' />\n\n// justifyContent\n<Flex justifyContent='center' />\n\n// flexWrap\n<Flex flexWrap='wrap' />\n\n// flexBasis\n<Flex flexBasis='auto' />\n\n// flexDirection\n<Flex flexDirection='column' />\n\n// flex\n<Box flex='1 1 auto' />\n\n// justifySelf\n<Box justifySelf='center' />\n\n// alignSelf\n<Box alignSelf='center' />\n")),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"borders"}},"Borders"),r.a.createElement(p.MDXTag,{name:"p",components:n},"The ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"borders")," utility combines ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"border"),", ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"borderTop"),", ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"borderRight"),", ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"borderBottom")," and ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"borderLeft"),"."),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"<Box border='1px solid' />\n<Box borderTop='1px solid' />\n<Box borderRight='1px solid' />\n<Box borderBottom='1px solid' />\n<Box borderLeft='1px solid' />\n")),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// borderColor\n<Box borderColor='blue' />\n\n// borderRadius\n<Box borderRadius={4} />\n")),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"position"}},"Position"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// position\n<Box position='absolute' />\n\n// zIndex\n<Absolute zIndex={2} />\n\n// top, right, bottom, left\n<Fixed\n  top='0'\n  right='0'\n  bottom='0'\n  left='0'\n/>\n")),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"misc"}},"Misc"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// boxShadow\n<Box boxShadow={1} />\n\n// backgroundImage, backgroundSize, backgroundPosition, backgroundRepeat\n<Box\n  backgroundImage='kitten.png'\n  backgroundSize='cover'\n  backgroundPosition='center'\n  backgroundRepeat='repeat-x'\n/>\n\n// opacity\n<Box opacity={0.5} />\n")),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"variants"}},"Variants"),r.a.createElement(p.MDXTag,{name:"p",components:n},"The variant style utilities allow you to define reusable style objects in your theme for things like text styles and color combinations."),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"// example theme\nconst theme = {\n  textStyles: {\n    caps: {\n      textTransform: 'uppercase',\n      letterSpacing: '0.2em'\n    }\n  },\n  colorStyles: {\n    warning: {\n      color: 'black',\n      backgroundColor: 'orange'\n    },\n    error: {\n      color: 'white',\n      backgroundColor: 'red'\n    },\n  },\n  buttons: {\n    primary: {\n      color: 'white',\n      backgroundColor: 'blue',\n      '&:hover': {\n        backgroundColor: 'black',\n      }\n    }\n  }\n}\n")),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"// textStyle\n<Text textStyle='caps' />\n\n// colorStyle\n<Box colors='warning' />\n\n// buttonStyle\n<Button variant='primary' />\n")),r.a.createElement(p.MDXTag,{name:"hr",components:n}),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"utilities"}},"Utilities"),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"themeget"}},"themeGet"),r.a.createElement("div",{id:"theme"}),r.a.createElement(p.MDXTag,{name:"p",components:n},"The ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"themeGet")," function is an existential getter function\nthat can be used in any style declaration to get a value\nfrom your theme, with support for fallback values.\nThis helps prevent errors from throwing when a theme value is missing,\nwhich can be helpful when unit testing styled-components."),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"themeGet(objectPath, fallbackValue)(props)\n")),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import styled from 'styled-components'\nimport { themeGet } from 'styled-system'\n\nconst Box = styled.div`\n  border-radius: ${themeGet('radii.small', '4px')};\n`\n")),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"proptypes"}},"propTypes"),r.a.createElement(p.MDXTag,{name:"p",components:n},"Prop type definitions are available for each style function to add to your component's propTypes object.\nEach value in ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"propTypes")," is an object which should be assigned (or spread) to the component's ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"propTypes"),"."),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"import styled from 'styled-components'\nimport { width } from 'styled-system'\n\nconst Box = styled.div`\n  ${width}\n`\n\nBox.propTypes = {\n  ...width.propTypes\n}\n")),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"mixed"}},"mixed"),r.a.createElement(p.MDXTag,{name:"p",components:n},"The ",r.a.createElement(p.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"mixed")," utility can be used to create style objects based on style objects mixed with styled-system props."),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { mixed } from 'styled-system'\nimport theme from './theme'\n\nmixed({\n  theme,\n  color: 'blue',\n  textDecoration: 'none',\n  '&:hover': {\n    textDecoration: 'underline',\n  }\n})\n// returns a style object with `theme.colors.blue` value\n// and text-decoration styles\n")),r.a.createElement(p.MDXTag,{name:"p",components:n},"This can be used in combination with the ",r.a.createElement(p.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#variant"}},"variant")," utility\nor directly in component definitions.\nThis utility ",r.a.createElement(p.MDXTag,{name:"strong",components:n,parentName:"p"},"will not")," add any props to a component."),r.a.createElement(p.MDXTag,{name:"hr",components:n}),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"customize"}},"Customize"),r.a.createElement(p.MDXTag,{name:"p",components:n},"To create custom utilities for other CSS properties,\nuse the following low-level utility functions."),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"style"}},"style"),r.a.createElement(p.MDXTag,{name:"p",components:n},"Create a style utility."),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import styled from 'styled-components'\nimport { style } from 'styled-system'\n\nconst fontSize = style({\n  // React prop name\n  prop: 'fontSize',\n  // The corresponding CSS property (defaults to prop argument)\n  cssProperty: 'fontSize',\n  // key for theme values\n  key: 'fontSizes',\n  // accessor function for transforming the value\n  transformValue: n => n + 'px',\n  // add a fallback scale object or array, if theme is not present\n  scale: [ 0, 4, 8, 16, 32 ]\n})\n\nconst Text = styled.div`\n  ${fontSize}\n`\n\n// with a `theme.shadows` array\nconst App = props => (\n  <Text fontSize={3}>\n    Hello\n  </Text>\n)\n")),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"variant"}},"variant"),r.a.createElement(p.MDXTag,{name:"p",components:n},"Create a style utility that maps props to style objects in a theme."),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import styled from 'styled-components'\nimport { variant } from 'styled-system'\n\nconst cardStyle = variant({\n  key: 'cards'\n})\n\nconst Card = styled.div`\n  ${cardStyle}\n`\nCard.defaultProps = {\n  variant: 'normal'\n}\n// <Card variant='large' />\n")),r.a.createElement(p.MDXTag,{name:"hr",components:n}),r.a.createElement(p.MDXTag,{name:"h2",components:n,props:{id:"defaults"}},"Defaults"),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"breakpoints"}},"Breakpoints"),r.a.createElement(p.MDXTag,{name:"p",components:n},"If no theme is provided, styled-system uses smart defaults for breakpoints."),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"// Default Breakpoints\nconst breakpoints = [ '40em', '52em', '64em' ]\n// @media screen and (min-width: 40em)\n// @media screen and (min-width: 52em)\n// @media screen and (min-width: 64em)\n")),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"font-sizes"}},"Font Sizes"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},"// default fontSizes\nconst fontSizes = [ 12, 14, 16, 20, 24, 32, 48, 64, 72 ]\n")),r.a.createElement(p.MDXTag,{name:"h3",components:n,props:{id:"space-1"}},"Space"),r.a.createElement(p.MDXTag,{name:"pre",components:n},r.a.createElement(p.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},"// default space for margin and padding\nconst space = [ 0, 4, 8, 16, 32, 64, 128, 256, 512 ]\n")))}}}]);